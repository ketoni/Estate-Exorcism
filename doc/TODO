
* SpellBookState
    - Add contents and/or images
    - Needs the spells to be decided
    - Define how the game knows which spells the player has learned

* MonsterManualState
    - Add contents and/or images
    - Needs the monsters to be decided
    - Define how the game knows which monsters the player has encountered

* LetterState (teo)
    - Create the state
    - Add contents and/or images
    - Define how the game knows which estates the player has cleared

* HomeState
    - Place correct sprites for each of the buttons
    - Add borders or something to make buttons them more visible
    - Add subtle background animations (ask if the cat is animated already)

* EstateState / RoomState
    - Monster spawning
    - Combat

* Monsters (keks)
    ? How to implement behavior in GameObject alone? Some 'brain' component?
    ? What happens when they die?

* GameObject (keks)
    ? Can these interact other GameObjects directly (access GameObject vector) or just the State they're in?
    ? Can these create other GameObjects in the State they're in? Monsters creating other monsters or other stuff?
    - Best to create a spawn queue which state accesses on each update cycle, can be used to spawn other objects
    - "Do this before this object is destoryed"
    - Animations

* Player and gameplay
    ? What happens on death?
    - Controls

* Combat
    ? How does it actually work?
    ? Do you hit all monsters at once?

* Resources (kek)
    - Playing sound

* Music
    - Search for some
    - Compose a simple eerie background loop?

* Sound effects
    - Search for some
